{"version":3,"sources":["api/ajax.js","api/index.js","utlis/memoryUtlis.js","utlis/storageUtils.js","store/reducer.js","store/index.js","views/Login.js","components/left-nav/index.js","components/top-nav/mybreadcrumb/index.js","components/top-nav/index.js","components/search-item/index.js","page/detail/index.js","page/reject/upload/index.js","page/reject/index.js","page/check/index.js","page/search/index.js","page/checked/index.js","page/home/home.js","views/Main.js","views/New.js","views/Register.js","App.js","reportWebVitals.js","index.js"],"names":["ajax","url","data","type","axios","get","params","post","reqRegister","username","userpassword","userRank","reqItem","itemState","reqDetailTable","item_id","user","store","set","remove","defaultState","detailVisible","record","itemData","checkData","checkedData","path","reasonVisible","detailTable","createStore","state","action","newState","JSON","parse","stringify","rejectVisible","rejectItem","Login","onFinish","values","a","password","response","error","memoryutlis","storageUtils","dispatch","success","props","history","replace","console","log","alert","message","className","name","initialValues","remember","this","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","htmlType","to","React","Component","LeftNav","collapsed","key","subscribe","setState","getState","SubMenu","style","width","selectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","icon","MailOutlined","title","MyBreadcrumb0","HomeOutlined","MyBreadcrumb1","MyBreadcrumb2","TopNav","getTitle","location","pathname","logout","memoryUtlis","redirectUser","push","component","defaultSelectedKeys","onClick","PoweroffOutlined","withRouter","Option","Detail","getTable","_id","handleOk","handleCancel","test","setOperationType","OperationType","setUserRank","visible","columns","dataIndex","render","rank","text","index","href","fileName","download","onOk","onCancel","maskClosable","cancelText","okText","bordered","column","label","itemName","itemNumber","itemContent","itemBasis","itemCondtion","itemMaterials","itemTimelimit","itemHotline","itemFile","itemReason1","itemReason2","dataSource","rowKey","pagination","headers","authorization","onChange","info","file","status","fileList","MyUpload","UploadOutlined","Reject","value","warning","itemReason","response0","e","target","TextArea","allowClear","showCount","maxLength","height","event","autoSize","minRows","maxRows","ref","Check","getItemstate","showDetail","action0","action1","checkItem","operationVisible","figureUserRank","figureItemState","getData","i","length","Index","useForm","form","undefined","getFieldsValue","checkReason","checkOperation","checkFile","maxCount","Group","color","size","Search","onChange0","searchClass","onChange1","searchContent","onChange2","searchState","onSearch","reSet","myInput","gutter","lineHeight","options","SearchOutlined","Checked","setColor","setStateName","layout","labelCol","span","wrapperCol","tailLayout","offset","Home","onButton","buttonValue","disabled","buttonType","userIns","getUser","Sider","Header","Content","Footer","Main","New","Register","warn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f8cc1c2f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function ajax(url,data={},type){\r\n\r\n    if(type==='GET'){\r\n        return axios.get(url,{\r\n                params:data\r\n            })\r\n    }else{\r\n        return axios.post(url,data)\r\n    }\r\n}","import ajax from './ajax'\r\n\r\nconst server=\"http://47.115.75.139:2000\" \r\n\r\nexport const reqLogin=(username,userpassword)=>ajax('./api/login',{username,userpassword},'POST')\r\n\r\nexport const reqRegister=(username,userpassword,userRank)=>ajax('./api/register',{username,userpassword,userRank},'POST')\r\n\r\nexport const reqItem=(itemState)=>ajax('./api/reqitem',{itemState},'POST')\r\n\r\nexport const passItem=(userRank,_id)=>ajax('./api/passitem',{userRank,_id},'POST')\r\n\r\nexport const rejectItem=(_id,itemReason)=>ajax('./api/rejectitem',{_id,itemReason},'POST')\r\n\r\nexport const reqAll=()=>ajax('./api/reqall',{},'POST')\r\n\r\nexport const searchItem=(searchClass,searchContent,searchState)=>ajax('./api/searchitem',{searchClass,searchContent,searchState},'POST')\r\n\r\nexport const setUser=(username,userIns)=>ajax('./api/setUser',{username,userIns},'POST')\r\n\r\nexport const reqUser=(username)=>ajax('./api/reqUser',{username},'POST')\r\n\r\nexport const reqDetailTable=(item_id)=>ajax('./api/reqDetailTable',{item_id},'POST')\r\n\r\nexport const checkItem=(item_id,itemState,username,userRank,checkOperation,checkReason)=>ajax('./api/checkItem',{item_id,itemState,username,userRank,checkOperation,checkReason},'POST')","export default{\r\n    user:{}\r\n}","import store from 'store'\r\n\r\nexport default{\r\n\r\n    saveUser(user){\r\n        //localStorage.setItem('user_key',JSON.stringify(user))\r\n        store.set('user_key',user)\r\n    },\r\n\r\n    getUser(){\r\n        //return JSON.parse(localStorage.getItem('user_key')||'{}')\r\n        return store.get('user_key')||{}\r\n    },\r\n\r\n    removeUser(){\r\n        //localStorage.removeItem('user_key')\r\n        store.remove('user_key')\r\n    }\r\n}","const defaultState ={\r\n    detailVisible:false,\r\n/*     rejectVisible:false,\r\n    rejectItem:\"\", */\r\n    record:{},\r\n    itemData:[],\r\n    checkData:[],\r\n    itemState:'',\r\n    checkedData:[],\r\n    path:'',\r\n    reasonVisible:false,\r\n    user:{},\r\n    detailTable:{}\r\n}\r\n\r\nexport default (state = defaultState,action)=>{\r\n\r\n    if(action.type=='showDetail'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.detailVisible=action.detailVisible\r\n        newState.reasonVisible=action.reasonVisible\r\n        return newState\r\n    }\r\n\r\n    if(action.type=='closeDetail'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.detailVisible=action.detailVisible\r\n        return newState\r\n    }\r\n    if(action.type=='storeRecord'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.record=action.record\r\n        return newState\r\n    }\r\n    if(action.type=='showReject'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.rejectVisible=action.rejectVisible\r\n        return newState\r\n    }\r\n    if(action.type=='closeReject'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.rejectVisible=action.rejectVisible\r\n        return newState\r\n    }\r\n    if(action.type=='getReject'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.rejectItem=action.rejectItem\r\n        return newState\r\n    }\r\n    if(action.type=='getAll'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.itemData=action.itemData\r\n        return newState\r\n    }\r\n    if(action.type=='getcheckedData'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.checkedData=action.checkedData\r\n        return newState\r\n    }\r\n    if(action.type=='getcheckData'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.checkData=action.checkData\r\n        newState.itemState=action.itemState\r\n        return newState\r\n    }\r\n    if(action.type=='setcheckedData'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.checkedData=action.checkedData\r\n        return newState\r\n    }\r\n    if(action.type=='getPath'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.path=action.path\r\n        return newState\r\n    }\r\n    if(action.type=='getUser'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.user=action.user\r\n        return newState\r\n    }\r\n    if(action.type=='storeDetailTable'){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.detailTable=action.detailTable\r\n        return newState\r\n    }\r\n    return state\r\n}","import { createStore } from 'redux'\r\nimport reducer from \"./reducer\"\r\n\r\nconst store = createStore(reducer)\r\nexport default store","import React, { Fragment } from 'react'\r\nimport \"./login.scss\"\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport {reqLogin} from '../api/index'\r\nimport memoryutlis from '../utlis/memoryUtlis'\r\nimport storageUtils from \"../utlis/storageUtils\"\r\nimport {Link} from 'react-router-dom'\r\nimport store from \"../store/index\"\r\n\r\nclass Login extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={};\r\n    };\r\n\r\n    onFinish = async (values) => {\r\n          try{\r\n              var response = await reqLogin(values.username,values.password)\r\n              if(response.data[0].state==1){\r\n                  message.error('密码错误')\r\n              }else{\r\n                  if(response.data[1].userRank==1){\r\n                    response.data[1].userRank=\"一级审核员\"\r\n                  }else{\r\n                    response.data[1].userRank=\"二级审核员\"  \r\n                  }              \r\n                  memoryutlis.user=response.data[1]\r\n                  storageUtils.saveUser(response.data[1])\r\n                  const action={\r\n                    type:\"getUser\",\r\n                    user:response.data[1]\r\n                }\r\n                store.dispatch(action)\r\n                  message.success('登陆成功')\r\n                  this.props.history.replace('/')\r\n   \r\n                  console.log('login',memoryutlis.user)\r\n              }\r\n          } catch(error){\r\n              alert(error.message)\r\n          }\r\n          \r\n\r\n/*           reqLogin(values.username,values.password).then(response=>{\r\n              console.log('req success',response.data)\r\n          }).catch(error=>{\r\n              console.log(\"fail\",error)\r\n          }) */\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment> \r\n                <div className=\"header\">\r\n                    <p>欢迎使用智能咨询审核平台</p>\r\n                </div>\r\n                <div className=\"form-warp\">\r\n                <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: '请输入用户名！' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: '请输入密码！' }]}\r\n                >\r\n                    <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    />\r\n                </Form.Item>\r\n                \r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    登录\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n                <Form.Item >\r\n{/*                     <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle className=\"login-form-remember\">\r\n                    <Checkbox>记住账号</Checkbox>\r\n                    </Form.Item> */}\r\n                    <div className=\"login-form-resign\"> \r\n                    没有账号？\r\n                    <Link to=\"/register\">现在注册</Link>\r\n                    </div>\r\n                   \r\n                </Form.Item>\r\n                </Form>  \r\n               \r\n            </div>\r\n           </Fragment>\r\n           \r\n          \r\n        );\r\n    }\r\n}\r\nexport default Login;","import React,{Component, Fragment} from \"react\"\r\nimport \"./index.scss\"\r\nimport { Menu, Button } from 'antd'\r\nimport {\r\n    UserOutlined,\r\n    MailOutlined,\r\n  } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport store from \"../../store/index\"\r\n\r\nexport default class LeftNav extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            collapsed: false,\r\n            key:\"/home\"\r\n        }\r\n        store.subscribe(()=>{\r\n            this.setState({key:store.getState().path})\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        const { SubMenu } = Menu;\r\n        return(\r\n            <Fragment>\r\n                <div className=\"title\">审核平台</div>\r\n                <div style={{ width: 256 }}>\r\n                    <Menu\r\n                    selectedKeys={[this.state.key]}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    inlineCollapsed={this.state.collapsed}\r\n                    >\r\n                    <Menu.Item key=\"/home\" icon={<UserOutlined />} >\r\n                        <Link to=\"/home\">个人中心</Link>\r\n                       \r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"事项审核\">\r\n                        <Menu.Item key=\"/check\">\r\n                            \r\n                            <Link to=\"/check\">\r\n                                <p>待审核</p>\r\n                            </Link>\r\n                           \r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"/checked\">\r\n                            <Link to=\"/checked\">\r\n                            已审核\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n                \r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}","import React,{Component, Fragment} from \"react\"\r\nimport { Breadcrumb} from 'antd'\r\nimport { HomeOutlined, UserOutlined } from '@ant-design/icons'\r\n\r\nexport class MyBreadcrumb0 extends Component{\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                    <Breadcrumb >\r\n                        <Breadcrumb.Item><HomeOutlined /></Breadcrumb.Item>\r\n                        <Breadcrumb.Item>个人中心</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport class MyBreadcrumb1 extends Component{\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                    <Breadcrumb >\r\n                        <Breadcrumb.Item><HomeOutlined /></Breadcrumb.Item>\r\n                        <Breadcrumb.Item>事项审核</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>待审核</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport class MyBreadcrumb2 extends Component{\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                    <Breadcrumb >\r\n                        <Breadcrumb.Item><HomeOutlined /></Breadcrumb.Item>\r\n                        <Breadcrumb.Item>事项审核</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>已审核</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React,{Component, Fragment} from \"react\"\r\nimport { Menu,Breadcrumb} from 'antd'\r\nimport {\r\n    UserOutlined,\r\n    PoweroffOutlined\r\n  } from '@ant-design/icons'\r\nimport { Row, Col } from 'antd';\r\nimport \"./index.scss\"\r\nimport memoryutlis from '../../utlis/memoryUtlis'\r\nimport {withRouter} from 'react-router-dom'\r\nimport storageUtils from '../../utlis/storageUtils'\r\nimport memoryUtlis from '../../utlis/memoryUtlis' \r\nimport {MyBreadcrumb0,MyBreadcrumb1,MyBreadcrumb2} from './mybreadcrumb'\r\nimport {Redirect,Route,Switch} from 'react-router-dom'\r\nimport store from \"../../store/index\"\r\n\r\nclass TopNav extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state=[]\r\n    }\r\n    getTitle=()=>{\r\n        const path = this.props.location.pathname\r\n       \r\n        const action={\r\n            type:\"getPath\",\r\n            path:path\r\n        }\r\n        store.dispatch(action)\r\n        console.log(path,store.getState())\r\n        return path\r\n    }\r\n\r\n    logout=()=>{\r\n        this.props.history.replace('/login')\r\n        storageUtils.removeUser()\r\n        memoryUtlis.user={}\r\n\r\n    }\r\n    redirectUser=()=>{\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        const user=memoryUtlis.user\r\n        const title=this.getTitle()\r\n        return(\r\n            \r\n            <Fragment>\r\n            <div className=\"top-nav\">\r\n                    <div className=\"top-nav-bread\">        \r\n                    <Switch>\r\n                        <Route path=\"/home\" component={MyBreadcrumb0}/>\r\n                        <Route path=\"/check\" component={MyBreadcrumb1}/>\r\n                        <Route path=\"/checked\" component={MyBreadcrumb2}/>\r\n                    </Switch>\r\n                    </div>\r\n            \r\n                    <Menu mode='horizontal' className=\"top-nav-menu\" defaultSelectedKeys=\"\" selectedKeys=\"\">\r\n                    <Menu.Item key=\"1\" icon={<UserOutlined />} onClick={this.redirectUser}> {user.username}</Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<PoweroffOutlined />} onClick={this.logout}>退出系统</Menu.Item>\r\n                    </Menu>\r\n            </div>             \r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TopNav)","import React,{Component, Fragment} from \"react\"\r\nimport { Select } from 'antd';\r\nimport { Input } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default class SearchItem extends Component{\r\n\r\n    handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <div>5</div>\r\n                <Input placeholder=\"Basic usage\" />\r\n                <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"disabled\" disabled>\r\n                    Disabled\r\n                </Option>\r\n                <Option value=\"Yiminghe\">yiminghe</Option>\r\n                </Select>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component,Fragment,useState } from 'react'\r\nimport { Modal, Button, Table,Divider } from 'antd'\r\nimport { Descriptions } from 'antd'\r\nimport store from \"../../store/index\"\r\nimport { set } from 'store'\r\nimport './index.scss'\r\nimport {reqDetailTable} from'../../api/index'\r\n\r\n\r\n\r\nexport default class Detail extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            visible:false,\r\n            detailTable:{}\r\n        }\r\n        this.getTable() \r\n        store.subscribe(()=>{\r\n            this.setState({visible:store.getState().detailVisible,\r\n                           reasonVisible:store.getState().reasonVisible,\r\n                           detailTable:store.getState().detailTable,\r\n                           })\r\n        })\r\n    }\r\n    getTable=async()=>{\r\n        try {\r\n            const response=await reqDetailTable(store.getState().record._id)\r\n            console.log(response.data)\r\n            const action={\r\n                type:\"storeDetailTable\",\r\n                detailTable:response.data\r\n            }\r\n            store.dispatch(action)\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    handleOk=()=>{\r\n        const action={\r\n            type:\"closeDetail\",\r\n            detailVisible:false\r\n        }\r\n        store.dispatch(action)\r\n    }\r\n    handleCancel=()=>{\r\n        const action={\r\n            type:\"closeDetail\",\r\n            detailVisible:false\r\n        }\r\n        store.dispatch(action)\r\n    } \r\n    test=()=>{\r\n        console.log(this.state,store.getState())\r\n    }\r\n    setOperationType=(OperationType)=>{\r\n        if(OperationType==1){\r\n            return \"通过\"\r\n        }else{\r\n            return \"拒绝\"\r\n        }\r\n    }\r\n    setUserRank=(userRank)=>{\r\n        if(userRank==1){\r\n            return \"一级审核员\"\r\n        }else{\r\n            return \"二级审核员\"\r\n        }\r\n    }  \r\n    render(){\r\n        const columns =[\r\n            {\r\n                title:'审核员名称',\r\n                dataIndex:'username',\r\n                key:'name'\r\n            },\r\n            {\r\n                title:'审核员等级',\r\n                dataIndex:'userRank',\r\n                key:'rank',\r\n                render:(rank)=>(\r\n                    <Fragment> {this.setUserRank(rank)} </Fragment>        \r\n                 )\r\n            },            \r\n            {\r\n                title:'操作时间',\r\n                dataIndex:'operationTime',\r\n                key:'time'\r\n            },            \r\n            {\r\n                title:'操作类型',\r\n                dataIndex:'operationType',\r\n                key:'type',\r\n                render:(type)=>(\r\n                    <Fragment> {this.setOperationType(type)} </Fragment>        \r\n                 )\r\n            },\r\n            {\r\n                title:'详细',\r\n                dataIndex:'fileName',\r\n                key:'file',\r\n                render:(text,record,index)=>(\r\n                    <a href={\"http://47.115.75.139:2000/file/\"+record.fileName} download>点击下载</a>\r\n                )\r\n            },\r\n        ]\r\n        return(\r\n            <Fragment>\r\n{/*                 <Button type=\"primary\" onClick={this.showModal}>\r\n                    Open Modal\r\n                </Button> */}\r\n                <Modal title=\"事项详情\" \r\n                visible={this.state.visible} \r\n                onOk={this.handleOk} \r\n                onCancel={this.handleCancel}\r\n                maskClosable={false}\r\n                width={800}\r\n                cancelText=\"取消\"\r\n                okText=\"确定\"\r\n                >\r\n                 <Descriptions bordered column={1} >\r\n\r\n                <Descriptions.Item label=\"事项名称\" width={20}>{store.getState().record.itemName}</Descriptions.Item>\r\n                <Descriptions.Item label=\"事项编码\">{store.getState().record.itemNumber}</Descriptions.Item>\r\n                <Descriptions.Item label=\"事项内容\">{store.getState().record.itemContent}</Descriptions.Item>\r\n                <Descriptions.Item label=\"政策依据\">{store.getState().record.itemBasis}</Descriptions.Item>\r\n                <Descriptions.Item label=\"申办所需资格条件\" >\r\n                {store.getState().record.itemCondtion}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"申办材料\" >{store.getState().record.itemMaterials}</Descriptions.Item>\r\n                <Descriptions.Item label=\"审核时限\" >{store.getState().record.itemTimelimit}</Descriptions.Item>\r\n                <Descriptions.Item label=\"咨询电话\" >{store.getState().record.itemHotline}</Descriptions.Item>\r\n                <Descriptions.Item label=\"事项原件\" ><a href={\"http://47.115.75.139:2000/file/\"+store.getState().record.itemFile} download>点击下载</a></Descriptions.Item>\r\n\r\n                 </Descriptions>\r\n\r\n                 {store.getState().record.itemReason1==\"\"? null:<Divider />}\r\n\r\n                 <Descriptions bordered column={1} >\r\n                    {store.getState().record.itemReason1==\"\"? 0:<Descriptions.Item label=\"一级审核员审核意见\" >{store.getState().record.itemReason1}</Descriptions.Item>} \r\n                    {store.getState().record.itemReason2==\"\"? 0:<Descriptions.Item label=\"二级审核员审核意见\" >{store.getState().record.itemReason2}</Descriptions.Item>} \r\n                 </Descriptions>\r\n\r\n                 <Divider />\r\n                 <Table columns={columns} dataSource={this.state.detailTable} rowKey='_id' pagination={false}></Table>\r\n                </Modal>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment,useState } from 'react'\r\nimport { Upload, message, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst props = {\r\n    name: 'picUrl',\r\n    action: '/upload',\r\n    headers: {\r\n        authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n        message.success('上传成功！');\r\n        } else if (info.file.status === 'error') {\r\n        message.error('上传失败');\r\n        }\r\n    },\r\n    };\r\n\r\nexport default class MyUpload extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                  <Upload {...props}>\r\n                    <Button icon={<UploadOutlined />}>点击上传文档</Button>\r\n                </Upload>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component,Fragment,useState } from 'react'\r\nimport { Modal, Button, Badge,message,Upload} from 'antd'\r\nimport { Descriptions } from 'antd'\r\nimport store from \"../../store/index\"\r\nimport { set } from 'store'\r\nimport { Input } from 'antd';\r\nimport {rejectItem, reqItem} from '../../api/index'\r\nimport Form from 'antd/lib/form/Form'\r\nimport MyUpload from './upload'\r\n\r\nexport default class Reject extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            visible:false,\r\n            value:\"\"\r\n        }\r\n        store.subscribe(()=>{\r\n            this.setState({visible:store.getState().rejectVisible})\r\n        })\r\n\r\n    }\r\n    handleCancel=()=>{\r\n        const action={\r\n            type:\"closeReject\",\r\n            rejectVisible:false\r\n        }\r\n        store.dispatch(action)\r\n        this.setState({\r\n            value:''\r\n        })\r\n    }\r\n    handleOk=async()=>{\r\n        if(this.state.value==''){\r\n            message.warning(\"必须输入字符\")\r\n        }else{\r\n            const action={\r\n                type:\"closeReject\",\r\n                rejectVisible:false\r\n            }\r\n            store.dispatch(action)\r\n            console.log(this.state.value,store.getState().rejectItem)\r\n\r\n            try{\r\n                const response=await rejectItem(store.getState().rejectItem,this.state.value) \r\n                const response0=await reqItem(store.getState().itemState)\r\n                console.log(response0.data)\r\n                message.success('操作成功')\r\n                const action={\r\n                    type:\"getcheckData\",\r\n                    checkData:response0.data,\r\n                    itemState:store.getState().itemState\r\n                }\r\n                store.dispatch(action)\r\n            }catch(error){\r\n                alert(error.message)\r\n            }\r\n            this.setState({\r\n                value:''\r\n            })\r\n        }\r\n    }\r\n    onChange=e=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n        \r\n    }\r\n    test=()=>{\r\n        this.setState({\r\n            value:''\r\n        })\r\n    }\r\n    render(){\r\n        const { TextArea } = Input\r\n        return(\r\n            <Fragment>\r\n                <Modal title=\"拒绝\" \r\n                visible={this.state.visible} \r\n                onOk={this.handleOk} \r\n                onCancel={this.handleCancel}\r\n                maskClosable={false}\r\n                width={800}\r\n                >\r\n                    <Form onFinish={this.test}>\r\n                        <Form.Item \r\n                         rules={[{ required: true, message: 'Please input your Password!' }]}>\r\n                            <TextArea \r\n                            placeholder=\"请输入拒绝理由\" \r\n                            allowClear \r\n                            showCount maxLength={100} \r\n                            style={{height:'200px'}}\r\n                            onChange={(event)=>this.onChange(event)}\r\n                            value={this.state.value}\r\n                            autoSize={{ minRows: 8, maxRows: 8 }}\r\n                            ref=\"myText\"   \r\n                            />\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <MyUpload></MyUpload>\r\n                </Modal>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React,{Component, Fragment} from \"react\"\r\nimport { Table, Tag, Space, message,Modal,Button,Form,Radio,Upload} from 'antd'\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'\r\nimport {reqItem,checkItem,reqDetailTable} from '../../api/index'\r\nimport storageUtils from '../../utlis/storageUtils'\r\nimport memoryUtlis from '../../utlis/memoryUtlis'\r\nimport Detail from '../detail/index'\r\nimport store from \"../../store/index\"\r\nimport { set } from \"store\"\r\nimport Reject from \"../reject\"\r\nimport TextArea from \"antd/lib/input/TextArea\"\r\n\r\nexport default class Check extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            checkData:[],\r\n            operationVisible:false,\r\n            record:{},\r\n            figureUserRank:0,\r\n            figureItemState:0\r\n        }\r\n        this.getData(this.getItemstate())\r\n\r\n        store.subscribe(()=>{\r\n            this.setState({checkData:store.getState().checkData})\r\n        })\r\n    }\r\n\r\n    getItemstate=()=>{\r\n        const user=memoryUtlis.user\r\n        console.log(memoryUtlis.user)\r\n        if (user.userRank==\"一级审核员\"){\r\n            return 1\r\n        }else{\r\n            return 2\r\n        }\r\n\r\n    } \r\n\r\n   showDetail=async(record)=>{\r\n        var reasonVisible=true\r\n        if(record.itemReason==''){\r\n            reasonVisible=false\r\n        }\r\n        const action={\r\n            type:\"showDetail\",\r\n            reasonVisible:reasonVisible,\r\n            detailVisible:true\r\n        }\r\n        store.dispatch(action)\r\n    \r\n        const action0={\r\n            type:\"storeRecord\",\r\n            record:record\r\n        }\r\n        store.dispatch(action0)\r\n\r\n        try {\r\n            const response=await reqDetailTable(record._id)\r\n            console.log(response.data)\r\n            const action1={\r\n                type:\"storeDetailTable\",\r\n                detailTable:response.data\r\n            }\r\n            store.dispatch(action1)\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n /*    passItemRow=async(record)=>{\r\n        const user=memoryUtlis.user\r\n        try{\r\n            const response=await passItem(user.userRank,record._id)\r\n            console.log(response)\r\n            this.getData(this.getItemstate())\r\n            message.success('操作成功')\r\n        }catch(error){\r\n            alert(error.message)\r\n        }\r\n        \r\n    }\r\n    //拒绝\r\n    rejectItem=(record)=>{\r\n        const action={\r\n            type:\"showReject\",\r\n            rejectVisible:true\r\n        }\r\n        store.dispatch(action)\r\n        //获取拒绝事项的_id\r\n        const action0={\r\n            type:\"getReject\",\r\n            rejectItem:record._id\r\n        }\r\n        store.dispatch(action0)\r\n        console.log(record,store.getState())\r\n    } */\r\n\r\n    checkItem=(record)=>{\r\n        this.setState({\r\n            record:record,\r\n            operationVisible:true\r\n        })\r\n        if(memoryUtlis.user.userRank==\"一级审核员\"){\r\n            this.setState({\r\n                figureUserRank:1\r\n            })\r\n        }else{\r\n            this.setState({\r\n                figureUserRank:2\r\n            })\r\n        }\r\n        if(record.itemState==\"一级审核员待审\"){\r\n            this.setState({\r\n                figureItemState:1\r\n            })\r\n        }else{\r\n            this.setState({\r\n                figureItemState:2\r\n            })\r\n        } \r\n    }\r\n/*     handleOk=()=>{\r\n\r\n        if(this.state.radioValue==0){\r\n            message.error(\"请选择审核状态\")\r\n        }else{\r\n            this.setState({\r\n            operationVisible:false,\r\n            radioValue:0\r\n           })\r\n        }\r\n    } */\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            operationVisible:false,\r\n        })\r\n        console.log(this.state.record)\r\n    }\r\n    getData=async(itemState)=>{\r\n        try{\r\n            const response =await reqItem(itemState)\r\n            console.log(\"1\",itemState,response.data)\r\n\r\n            for (let i=0;i<response.data.length;i++){\r\n                if(response.data[i].itemState==1){\r\n                    response.data[i].itemState=\"一级审核员待审\"\r\n                }\r\n                if(response.data[i].itemState==2){\r\n                    response.data[i].itemState=\"二级审核员待审\"\r\n                }\r\n            }\r\n\r\n            const action={\r\n                type:\"getcheckData\",\r\n                checkData:response.data,\r\n                itemState:this.getItemstate()\r\n            }\r\n            store.dispatch(action)\r\n\r\n        }catch(error){\r\n            alert(error.message)\r\n        }\r\n    }\r\n    \r\n\r\n    render(){ \r\n\r\n        const Index = props => {\r\n            const [form] = Form.useForm();\r\n        const handleOk = async(e) => {//点击对话框OK按钮触发的事件\r\n            // 获取form的值\r\n            if(form.getFieldsValue().checkReason==undefined||form.getFieldsValue().checkOperation==undefined||form.getFieldsValue().checkFile==undefined){\r\n                message.warning(\"请补全表单\")\r\n            }else{\r\n                console.log(this.state.record._id,this.state.figureItemState,\r\n                    memoryUtlis.user.username,this.state.figureUserRank,\r\n                    form.getFieldsValue().checkOperation,form.getFieldsValue().checkReason);\r\n                try {                \r\n                    const response=await checkItem(this.state.record._id,this.state.figureItemState,\r\n                        memoryUtlis.user.username,this.state.figureUserRank,\r\n                        form.getFieldsValue().checkOperation,form.getFieldsValue().checkReason)\r\n                        this.getData(this.getItemstate())\r\n                        message.success(\"操作成功\")\r\n                    \r\n                } catch (error) {\r\n                    \r\n                }\r\n                this.setState({\r\n                    operationVisible:false\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n        return (\r\n        <Modal\r\n        title=\"审核\"\r\n        visible={this.state.operationVisible}\r\n        onOk={handleOk}\r\n        onCancel={this.handleCancel}\r\n        cancelText=\"取消\"\r\n        okText=\"确定\"\r\n        maskClosable={false}\r\n        width={800}>\r\n            <Form form={form}>\r\n                <Form.Item label=\"审核意见\" name=\"checkReason\"\r\n                rules={[{ required: true}]}>\r\n                    <TextArea\r\n                    placeholder=\"请输入审核意见\"></TextArea>\r\n                </Form.Item>\r\n                <Form.Item label=\"上传文件\" name=\"checkFile\"\r\n                rules={[{ required: true}]}>\r\n                    <Upload \r\n                    name=\"file\" \r\n                    action=\"/api/upload\"\r\n                    data={{\r\n                        item_id:this.state.record._id,\r\n                        itemState:this.state.figureUserRank\r\n                    }}\r\n                    maxCount={1}\r\n                    >\r\n                    <Button icon={<UploadOutlined />}>点击上传</Button>\r\n                    </Upload>\r\n               </Form.Item>\r\n               <Form.Item label=\"操作\"  name=\"checkOperation\"\r\n               rules={[{ required: true}]}>\r\n                    <Radio.Group >\r\n                    <Radio value={1}>通过</Radio>\r\n                    <Radio value={2}>拒绝</Radio>\r\n               </Radio.Group>\r\n               \r\n               </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n        )\r\n        } \r\n        \r\n\r\n       const columns=[\r\n            {\r\n                title:'事项编码',\r\n                dataIndex:'itemNumber',\r\n                key:'number'\r\n            },\r\n            {\r\n                title:'事项名称',\r\n                dataIndex:'itemName',\r\n                key:'name'\r\n            },\r\n            {\r\n                title:'事项区划',\r\n                dataIndex:'itemContent',\r\n                key:'content'\r\n            },\r\n           {\r\n                title:'事项状态',\r\n                dataIndex:'itemState',\r\n                key:'itemState',\r\n                render:(itemState)=>(\r\n                        <Tag color={'processing'}>\r\n                            {itemState}\r\n                        </Tag>\r\n                )\r\n            },\r\n            {\r\n                title:'详情',\r\n                dataIndex:'detail',\r\n                key:'detail',\r\n                render:(text,record,index)=>(\r\n                    <a onClick={()=>{this.showDetail(record)}}>详情</a>\r\n                )\r\n\r\n            },\r\n            {\r\n                title:'操作',\r\n                key:'action',\r\n                render:(text,record,index)=>(\r\n                    <Space size=\"middle\">\r\n{/*                         <a onClick={()=>this.passItemRow(record)}>通过</a>\r\n                        <a onClick={()=>this.rejectItem(record)}>拒绝</a> */}\r\n                        <a onClick={()=>this.checkItem(record)}>审核</a>\r\n                    </Space>\r\n                )\r\n            } \r\n       \r\n         ]\r\n\r\n        return(\r\n            <Fragment>\r\n             <Table columns={columns} dataSource={this.state.checkData} rowKey='_id'/>\r\n             <Detail></Detail>\r\n             <Reject></Reject>\r\n             <Index></Index>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React,{Component, Fragment} from \"react\"\r\nimport { Select,Input,Button, message} from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { Row, Col, Divider } from 'antd'\r\nimport {searchItem} from '../../api/index'\r\nimport store from \"../../store/index\"\r\n\r\nexport default class Search extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            searchClass:'',\r\n            searchContent:'',\r\n            searchState:'',\r\n            value:''\r\n        }\r\n    }\r\n    onChange0=(e)=>{\r\n \r\n        this.setState({\r\n            searchClass:e\r\n        })\r\n    }\r\n    onChange1=(e)=>{\r\n        this.setState({\r\n            searchContent:e.target.value\r\n        })\r\n\r\n    }\r\n    onChange2=(e)=>{\r\n        this.setState({\r\n            searchState:e\r\n        })\r\n    }\r\n\r\n    onSearch=async()=>{\r\n        try {\r\n            const response =await searchItem(this.state.searchClass,this.state.searchContent,this.state.searchState)\r\n            console.log(response.data)        \r\n            const action={\r\n            type:\"setcheckedData\",\r\n            checkedData:response.data\r\n            }\r\n            store.dispatch(action)\r\n            message.success('搜索成功')\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    reSet=()=>{\r\n        const action0={\r\n            type:\"getcheckedData\",\r\n            checkedData:store.getState().itemData\r\n        }\r\n        store.dispatch(action0)\r\n        this.ref.myInput.state.value = ''\r\n    }\r\n    render(){\r\n        const options0 = [\r\n            {\r\n               value: \"itemNumber\",\r\n               label: '事项编码',\r\n            },            \r\n            {\r\n                value: \"itemName\",\r\n                label: '事项名称',\r\n            },\r\n            {\r\n                value: \"itemContent\",\r\n                label: '事项内容',\r\n            },\r\n            {\r\n                value: \"itemBasis\",\r\n                label: '政策依据',\r\n            },\r\n    \r\n          ]\r\n        const options1 = [\r\n            {\r\n                value: 0,\r\n                label: '全部',\r\n            }, \r\n            {\r\n               value: 1,\r\n               label: '一级审核员待审',\r\n            },            \r\n            {\r\n                value: 2,\r\n                label: '一级审核员待审',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '审核通过',\r\n            },\r\n            {\r\n                value: 4,\r\n                label: '审核失败',\r\n            },\r\n    \r\n          ]\r\n        return(\r\n            <Fragment>\r\n                <Row gutter={16}>\r\n                    <Col>\r\n                       <p style={{lineHeight:\"30px\"}}>查询：</p>\r\n                    </Col>\r\n                    <Col>\r\n                       <Select options={options0} onChange={(event)=>this.onChange0(event)} placeholder=\"分类\"  style={{ width: 100 }} allowClear={true}/>\r\n                    </Col>\r\n                    <Col>  \r\n                       <Input onChange={(event)=>this.onChange1(event)} placeholder=\"请输入搜索内容\" ref=\"myInput\" allowClear={true}/>\r\n                    </Col>\r\n                    <Col> \r\n                        <Select ref=\"mySelect\" options={options1} onChange={(event)=>this.onChange2(event)} placeholder=\"事项状态\"  style={{ width: 140 }}allowClear={true}/>\r\n                    </Col>\r\n                    <Col> \r\n                        <Button type=\"primary\" icon={<SearchOutlined />} onClick={this.onSearch}>\r\n                        搜索\r\n                        </Button>\r\n                    </Col>\r\n{/*                     <Col>\r\n                        <Button onClick={this.reSet}>重置</Button>\r\n                    </Col> */}\r\n                </Row>\r\n               \r\n              \r\n               \r\n               \r\n                   \r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React,{Component, Fragment} from \"react\"\r\nimport { Table, Tag, Space } from 'antd'\r\nimport {reqAll,reqDetailTable} from '../../api/index'\r\nimport store from \"../../store/index\"\r\nimport Search from \"../search/index\"\r\nimport Detail from '../detail/index'\r\n\r\nexport default class Checked extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n             checkedData:[]\r\n        }\r\n        this.getData()\r\n        store.subscribe(()=>{\r\n            this.setState({checkedData:store.getState().checkedData})\r\n        })\r\n        \r\n    }\r\n    getData=async()=>{\r\n        try{\r\n            const response=await reqAll()\r\n            const action={\r\n                type:\"getAll\",\r\n                itemData:response.data\r\n            }\r\n            store.dispatch(action)\r\n            const action0={\r\n                type:\"getcheckedData\",\r\n                checkedData:response.data\r\n            }\r\n            store.dispatch(action0)\r\n            console.log(store.getState())\r\n        }catch(error){\r\n            alert(error.message)\r\n        }\r\n    \r\n    }\r\n\r\n    setColor=(itemState)=>{\r\n        if(itemState==1||itemState==2){\r\n            return \"processing\"\r\n        }\r\n        if(itemState==4){\r\n            return \"default\"\r\n        }else\r\n        return \"success\"\r\n    }\r\n    setStateName=(itemState)=>{\r\n        if(itemState==1){\r\n            return \"一级审核员待审\"\r\n        }\r\n        if(itemState==2){\r\n            return \"二级审核员待审\"\r\n        }\r\n        if(itemState==3){\r\n            return \"审核通过\"\r\n        }else{\r\n            return \"审核失败\"\r\n        }\r\n    }\r\n    showDetail=async(record)=>{\r\n        var reasonVisible=true\r\n        if(record.itemReason==''){\r\n            reasonVisible=false\r\n        }\r\n        const action={\r\n            type:\"showDetail\",\r\n            reasonVisible:reasonVisible,\r\n            detailVisible:true\r\n        }\r\n        store.dispatch(action)\r\n    \r\n        const action0={\r\n            type:\"storeRecord\",\r\n            record:record\r\n        }\r\n        store.dispatch(action0)\r\n\r\n        try {\r\n            const response=await reqDetailTable(record._id)\r\n            console.log(response.data)\r\n            const action1={\r\n                type:\"storeDetailTable\",\r\n                detailTable:response.data\r\n            }\r\n            store.dispatch(action1)\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    render(){\r\n        const columns=[\r\n            {\r\n                title:'事项编码',\r\n                dataIndex:'itemNumber',\r\n                key:'number'\r\n            },\r\n            {\r\n                title:'事项名称',\r\n                dataIndex:'itemName',\r\n                key:'name'\r\n            },\r\n            {\r\n                title:'事项内容',\r\n                dataIndex:'itemContent',\r\n                key:'content'\r\n            },\r\n           {\r\n                title:'事项状态',\r\n                dataIndex:'itemState',\r\n                key:'itemState',\r\n                render:(itemState)=>(\r\n                        <Tag color={this.setColor(itemState)}>\r\n                            {this.setStateName(itemState)}\r\n                        </Tag>\r\n                )\r\n            },\r\n            {\r\n                title:'详情',\r\n                dataIndex:'detail',\r\n                key:'detail',\r\n                render:(text,record,index)=>(\r\n                    <a onClick={()=>{this.showDetail(record)}}>详情</a>\r\n                )\r\n            }       \r\n         ]\r\n\r\n        return(\r\n            <Fragment>\r\n                <Search></Search>\r\n                <Table columns={columns} dataSource={this.state.checkedData} rowKey='_id'/>\r\n                <Detail></Detail>\r\n            </Fragment>\r\n    \r\n        )\r\n    }\r\n}","import React,{Component, Fragment} from \"react\"\r\nimport storageUtils from '../../utlis/storageUtils'\r\nimport memoryUtlis from '../../utlis/memoryUtlis'\r\nimport './home.scss'\r\nimport { Avatar,Button,Input,Form, message} from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport FileViewer from 'react-file-viewer'\r\nimport store from \"../../store/index\"\r\nimport {setUser,reqUser} from \"../../api/index\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 2,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 16,\r\n    },\r\n  };\r\n  \r\n\r\nexport default class Home extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            buttonType:\"\",\r\n            disabled:false,\r\n            buttonValue:\"编辑\",\r\n            userIns:store.getState().user.userIns,\r\n        } \r\n        store.subscribe(()=>{\r\n            this.setState({userIns:store.getState().user.userIns})\r\n        })\r\n        console.log(this.getUser())   \r\n        \r\n    }\r\n    onButton= async()=>{\r\n        if (this.state.buttonValue==\"编辑\"){\r\n            this.setState({\r\n                disabled:true,\r\n                buttonType:\"primary\",\r\n                buttonValue:\"保存\",\r\n                userIns:\"\"\r\n             })\r\n        }else{\r\n            this.setState({\r\n                disabled:false,\r\n                buttonType:\"\",\r\n                buttonValue:\"编辑\",\r\n             })             \r\n             try {\r\n                 const response =await setUser(memoryUtlis.user.username,this.state.userIns)\r\n                 console.log(response.data)\r\n                 if(response.data==\"success\"){\r\n                    message.success('保存成功')\r\n                 }\r\n             } catch (error) {\r\n                alert(error.message)\r\n             }\r\n        }\r\n \r\n       \r\n    }\r\n    getUser=async()=>{\r\n        try {\r\n            var response = await reqUser(memoryUtlis.user.username)\r\n            const action={\r\n                type:\"getUser\",\r\n                user:response.data\r\n            }\r\n            store.dispatch(action)\r\n            console.log(store.getState())\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    onChange=(e)=>{\r\n        if(this.state.buttonValue==\"保存\"){\r\n            this.setState({\r\n            userIns:e.target.value\r\n            })\r\n        }\r\n    \r\n        console.log(this.state.userIns)\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {/* <Avatar shape=\"square\" size={64} icon={<UserOutlined />} /> */}\r\n                <Form\r\n                {...layout}\r\n                className=\"form\"\r\n                onFinish={this.onButton}>\r\n                    <Form.Item \r\n                    label=\"账号：\"\r\n                    >\r\n                    <Input placeholder=\"Basic usage\" disabled={this.state.disabled} value={memoryUtlis.user.username}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    label=\"审核员等级: \"\r\n                    >\r\n                     <Input placeholder=\"Basic usage\" disabled={this.state.disabled} value={memoryUtlis.user.userRank}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    label=\"所属机构:\"\r\n                     >\r\n                      <Input placeholder=\"请输入所属机构\" value={this.state.userIns} onChange={this.onChange}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    {...tailLayout}>\r\n                     <Button type={this.state.buttonType} htmlType=\"submit\" > {this.state.buttonValue}</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport memoryutlis from '../utlis/memoryUtlis'\r\nimport {Redirect,Route,Switch} from 'react-router-dom'\r\nimport { Layout, Menu } from 'antd';\r\nimport \"./main.scss\"\r\nimport LeftNav from \"../components/left-nav\"\r\nimport TopNav from \"../components/top-nav\"\r\nimport SearchItem from \"../components/search-item\"\r\nimport Check from \"../page/check\"\r\nimport Checked from \"../page/checked\"\r\nimport Home from \"../page/home/home\"\r\n\r\nconst { Header,Sider, Content,Footer } = Layout;\r\n\r\nclass Main extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        const user=memoryutlis.user\r\n    \r\n        if(!user.username){\r\n        return <Redirect to = '/'/>\r\n        } \r\n\r\n        return (\r\n/*                 <Layout style={{height:'100%'}}>\r\n                <Sider style={{width:'256px'}}>\r\n                    <LeftNav></LeftNav>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header></Header>\r\n                    <Content>Content</Content>\r\n                    <Footer>Footer</Footer>\r\n                </Layout>\r\n                </Layout> */\r\n                <Fragment>\r\n                    <Layout className=\"layout\">                   \r\n                        <Sider className=\"slider\" width={256}>\r\n                        <LeftNav></LeftNav>\r\n                        </Sider>\r\n                        <Layout>\r\n                           <TopNav></TopNav>\r\n                           <Content>\r\n                               <div className=\"content-main\">\r\n                               <Switch>\r\n                                   <Route path=\"/home\" component={Home}/>\r\n                                   <Route path=\"/check\" component={Check}/>\r\n                                   <Route path=\"/checked\" component={Checked}/>\r\n                                   <Redirect to=\"/home\"/>\r\n                               </Switch>\r\n                               </div>\r\n                           </Content>\r\n                           <Footer className=\"footer\">version 1.0.0</Footer>\r\n                        </Layout>\r\n\r\n                    </Layout> \r\n                \r\n\r\n                </Fragment>\r\n                \r\n                 )\r\n    }\r\n}\r\nexport default Main;","import React from 'react'\r\n\r\nclass New extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={};\r\n    }\r\n    render(){\r\n        return <div>new</div>\r\n    }\r\n}\r\nexport default New;","import React, { Fragment,Component} from 'react'\r\nimport \"./login.scss\"\r\nimport { Form, Input, Button,Col,Row, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport {reqRegister} from '../api/index'\r\nimport memoryutlis from '../utlis/memoryUtlis'\r\nimport storageUtils from \"../utlis/storageUtils\"\r\nimport {Link} from 'react-router-dom'\r\nimport { Select } from 'antd';\r\n\r\nexport default class Register extends Component{\r\n    onFinish=async(values)=>{\r\n        console.log(values)\r\n        try{\r\n            const response =await reqRegister(values.username,values.userpassword,values.userRank)\r\n            if(response.data==\"registered successfully\"){\r\n                message.success(\"注册成功\")\r\n                this.props.history.push(\"./login\")\r\n            }else{\r\n                message.warn(\"账号已被注册！\")\r\n            }\r\n        }catch(error){\r\n              alert(error.message)\r\n          }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const options = [\r\n            {\r\n               value: 1,\r\n               label: '一级审核员',\r\n            },            \r\n            {\r\n                value: 2,\r\n                label: '二级审核员',\r\n            }\r\n        ]\r\n        return(\r\n            <Fragment>\r\n                <div className=\"header\">\r\n                    <p>欢迎使用智能咨询审核平台</p>\r\n                </div>\r\n                <div className=\"form-warp\">\r\n                <Form\r\n                className=\"login-form\"\r\n                onFinish={this.onFinish}\r\n                >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: '请输入用户名！' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入用户名\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"userpassword\"\r\n                    rules={[{ required: true, message: '请输入密码！' }]}\r\n                >\r\n                    <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item \r\n                label=\"请选择审核员等级\" \r\n                name=\"userRank\" \r\n                rules={[{ required: true, message: '请选择审核员等级！' }]}>\r\n\r\n                  <Select options={options} placeholder=\"等级\" style={{width:\"120px\"}}></Select>\r\n                </Form.Item>\r\n \r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    注册\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item >\r\n{/*                     <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle className=\"login-form-remember\">\r\n                    <Checkbox>记住账号</Checkbox>\r\n                    </Form.Item> */}\r\n                    <div className=\"resign-form-login\"> \r\n                    <Link to=\"/login\">立即登录</Link>\r\n                    </div>\r\n                   \r\n                </Form.Item>\r\n                </Form>  \r\n               \r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport {Switch,Route, HashRouter}from 'react-router-dom';\nimport Login from './views/Login'\nimport Main from \"./views/Main\"\nimport New from \"./views/New\"\nimport Register from './views/Register';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={};\n  } \n  \n  render(){\n    return(\n     <HashRouter>\n         <Switch> \n         <Route  component={Login} path=\"/login\" />         \n         <Route  component={Register} path=\"/register\" /> \n         <Route  component={Main} path=\"/\" />\n\n         <Route  component={New} path=\"/new\" /> \n       </Switch>\n       \n     </HashRouter>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\nimport storageUtils from './utlis/storageUtils'\nimport memoryUtlis from './utlis/memoryUtlis'\n\nconst user = storageUtils.getUser()\nmemoryUtlis.user=user\nReactDOM.render(\n<App></App>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}